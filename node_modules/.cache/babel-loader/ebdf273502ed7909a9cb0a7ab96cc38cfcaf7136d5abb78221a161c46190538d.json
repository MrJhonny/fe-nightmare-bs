{"ast":null,"code":"var _jsxFileName = \"/Users/jhon/Documents/Proyects/nightmare/fe-nightmare-bs/src/Components/ModalForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './ModalForm.css'; // Archivo CSS para personalizaciones\nimport { generateUsername } from \"./GenerateUsername\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:3000/api/v1/\";\nconst ModalForm = ({\n  isModalOpen,\n  setIsModalOpen\n}) => {\n  _s();\n  const [newStory, setNewStory] = useState({\n    title: \"\",\n    name: \"\",\n    recurrencia: \"\",\n    category: \"\",\n    value: \"\",\n    email: \"\"\n  });\n  const [categories, setCategories] = useState([]);\n  const [recurrenceTypes, setRecurrenceTypes] = useState([]);\n  const [apiError, setApiError] = useState(null);\n\n  // Deshabilitar el scroll al abrir el modal\n  useEffect(() => {\n    if (isModalOpen) {\n      document.body.style.overflow = \"hidden\"; // Deshabilita el scroll\n    } else {\n      document.body.style.overflow = \"auto\"; // Habilita el scroll\n    }\n    return () => {\n      document.body.style.overflow = \"auto\";\n    };\n  }, [isModalOpen]);\n\n  // Fetch Categories and Recurrence Types\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [categoriesResponse, recurrenceResponse] = await Promise.all([fetch(`${API_BASE_URL}categories`), fetch(`${API_BASE_URL}info`)]);\n        if (!categoriesResponse.ok || !recurrenceResponse.ok) {\n          throw new Error(\"Failed to fetch data from the API\");\n        }\n        const categoriesData = await categoriesResponse.json();\n        const recurrenceData = await recurrenceResponse.json();\n        setCategories(categoriesData.categories || []);\n        setRecurrenceTypes(recurrenceData.recurrence_types || []);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setApiError(\"Failed to fetch data. Please try again later.\");\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Handle Input Changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewStory(prevStory => ({\n      ...prevStory,\n      [name]: value\n    }));\n  };\n\n  // Submit Story\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    if (!newStory.title || !newStory.name || !newStory.recurrencia || !newStory.category || !newStory.value) {\n      alert(\"Please fill in all required fields.\");\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}notes`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newStory)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to submit story\");\n      }\n      alert(\"Story submitted successfully!\");\n      setIsModalOpen(false);\n      setNewStory({\n        title: \"\",\n        name: \"\",\n        recurrencia: \"\",\n        category: \"\",\n        value: \"\",\n        email: \"\"\n      });\n    } catch (error) {\n      console.error(\"Error submitting story:\", error);\n      alert(\"Failed to submit story. Please try again later.\");\n    }\n  };\n\n  // Cerrar el modal al hacer clic fuera del formulario\n  const handleModalClick = e => {\n    if (e.target.classList.contains(\"modal\")) {\n      setIsModalOpen(false);\n    }\n  };\n  return isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    onClick: handleModalClick,\n    style: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      zIndex: 1000\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      onClick: e => e.stopPropagation(),\n      style: {\n        backgroundColor: \"#1e1e1e\",\n        padding: \"20px\",\n        borderRadius: \"10px\",\n        color: \"#fff\",\n        width: \"90%\",\n        maxWidth: \"500px\",\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setIsModalOpen(false),\n        style: {\n          position: \"absolute\",\n          top: \"10px\",\n          right: \"10px\",\n          fontSize: \"24px\",\n          cursor: \"pointer\",\n          color: \"#fff\"\n        },\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a New Story\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this), apiError ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: apiError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-generator-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            className: \"name-generator-input\",\n            value: newStory.name,\n            onChange: handleInputChange,\n            placeholder: \"Use your name, nickname, or generate one\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"name-generator-button\",\n            onClick: () => generateUsername(setNewStory),\n            children: \"Generate Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: newStory.title,\n          onChange: handleInputChange,\n          placeholder: \"Title of your nightmare\",\n          maxLength: 30,\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            marginBottom: \"10px\",\n            borderRadius: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"recurrencia\",\n          value: newStory.recurrencia,\n          onChange: handleInputChange,\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            marginBottom: \"10px\",\n            borderRadius: \"5px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"How regularly does it happen?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 33\n          }, this), recurrenceTypes.map((type, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"category\",\n          value: newStory.category,\n          onChange: handleInputChange,\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            marginBottom: \"10px\",\n            borderRadius: \"5px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 33\n          }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category,\n            children: category\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"value\",\n          value: newStory.value,\n          onChange: handleInputChange,\n          placeholder: \"Describe your story\",\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            marginBottom: \"10px\",\n            borderRadius: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: newStory.email,\n          onChange: handleInputChange,\n          placeholder: \"Your Email\",\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            marginBottom: \"10px\",\n            borderRadius: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            backgroundColor: \"crimson\",\n            color: \"#fff\",\n            border: \"none\",\n            borderRadius: \"5px\"\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"10px\",\n            marginTop: \"15px\",\n            fontSize: \"14px\",\n            lineHeight: \"1.5\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"acceptTerms\",\n            required: true,\n            style: {\n              width: \"16px\",\n              height: \"16px\",\n              cursor: \"pointer\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              margin: 0\n            },\n            children: [\"I have read and accept the\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/terms\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              style: {\n                color: \"#fff\",\n                textDecoration: \"underline\",\n                fontWeight: \"bold\"\n              },\n              children: \"terms and conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 13\n  }, this);\n};\n_s(ModalForm, \"np5qmGzqUIgn/Z6IaglpStDUNVw=\");\n_c = ModalForm;\nexport default ModalForm;\nvar _c;\n$RefreshReg$(_c, \"ModalForm\");","map":{"version":3,"names":["React","useState","useEffect","generateUsername","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","ModalForm","isModalOpen","setIsModalOpen","_s","newStory","setNewStory","title","name","recurrencia","category","value","email","categories","setCategories","recurrenceTypes","setRecurrenceTypes","apiError","setApiError","document","body","style","overflow","fetchData","categoriesResponse","recurrenceResponse","Promise","all","fetch","ok","Error","categoriesData","json","recurrenceData","recurrence_types","error","console","handleInputChange","e","target","prevStory","handleFormSubmit","preventDefault","alert","response","method","headers","JSON","stringify","handleModalClick","classList","contains","className","onClick","position","top","left","width","height","backgroundColor","display","alignItems","justifyContent","zIndex","children","stopPropagation","padding","borderRadius","color","maxWidth","right","fontSize","cursor","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","maxLength","marginBottom","map","index","border","gap","marginTop","lineHeight","margin","href","rel","textDecoration","fontWeight","_c","$RefreshReg$"],"sources":["/Users/jhon/Documents/Proyects/nightmare/fe-nightmare-bs/src/Components/ModalForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './ModalForm.css'; // Archivo CSS para personalizaciones\nimport { generateUsername } from \"./GenerateUsername\";\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:3000/api/v1/\";\n\nconst ModalForm = ({ isModalOpen, setIsModalOpen }) => {\n    const [newStory, setNewStory] = useState({\n        title: \"\",\n        name: \"\",\n        recurrencia: \"\",\n        category: \"\",\n        value: \"\",\n        email: \"\",\n    });\n    const [categories, setCategories] = useState([]);\n    const [recurrenceTypes, setRecurrenceTypes] = useState([]);\n    const [apiError, setApiError] = useState(null);\n\n    // Deshabilitar el scroll al abrir el modal\n    useEffect(() => {\n        if (isModalOpen) {\n            document.body.style.overflow = \"hidden\"; // Deshabilita el scroll\n        } else {\n            document.body.style.overflow = \"auto\"; // Habilita el scroll\n        }\n\n        return () => {\n            document.body.style.overflow = \"auto\";\n        };\n    }, [isModalOpen]);\n\n    // Fetch Categories and Recurrence Types\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const [categoriesResponse, recurrenceResponse] = await Promise.all([\n                    fetch(`${API_BASE_URL}categories`),\n                    fetch(`${API_BASE_URL}info`),\n                ]);\n\n                if (!categoriesResponse.ok || !recurrenceResponse.ok) {\n                    throw new Error(\"Failed to fetch data from the API\");\n                }\n\n                const categoriesData = await categoriesResponse.json();\n                const recurrenceData = await recurrenceResponse.json();\n\n                setCategories(categoriesData.categories || []);\n                setRecurrenceTypes(recurrenceData.recurrence_types || []);\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n                setApiError(\"Failed to fetch data. Please try again later.\");\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    // Handle Input Changes\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setNewStory((prevStory) => ({ ...prevStory, [name]: value }));\n    };\n\n    // Submit Story\n    const handleFormSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!newStory.title || !newStory.name || !newStory.recurrencia || !newStory.category || !newStory.value) {\n            alert(\"Please fill in all required fields.\");\n            return;\n        }\n\n        try {\n            const response = await fetch(`${API_BASE_URL}notes`, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(newStory),\n            });\n\n            if (!response.ok) {\n                throw new Error(\"Failed to submit story\");\n            }\n\n            alert(\"Story submitted successfully!\");\n            setIsModalOpen(false);\n            setNewStory({ title: \"\", name: \"\", recurrencia: \"\", category: \"\", value: \"\", email: \"\" });\n        } catch (error) {\n            console.error(\"Error submitting story:\", error);\n            alert(\"Failed to submit story. Please try again later.\");\n        }\n    };\n\n    // Cerrar el modal al hacer clic fuera del formulario\n    const handleModalClick = (e) => {\n        if (e.target.classList.contains(\"modal\")) {\n            setIsModalOpen(false);\n        }\n    };\n\n    return (\n        isModalOpen && (\n            <div\n                className=\"modal\"\n                onClick={handleModalClick}\n                style={{\n                    position: \"fixed\",\n                    top: 0,\n                    left: 0,\n                    width: \"100%\",\n                    height: \"100%\",\n                    backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    zIndex: 1000,\n                }}\n            >\n                <div\n                    className=\"modal-content\"\n                    onClick={(e) => e.stopPropagation()}\n                    style={{\n                        backgroundColor: \"#1e1e1e\",\n                        padding: \"20px\",\n                        borderRadius: \"10px\",\n                        color: \"#fff\",\n                        width: \"90%\",\n                        maxWidth: \"500px\",\n                        position: \"relative\",\n                    }}\n                >\n                    <span\n                        onClick={() => setIsModalOpen(false)}\n                        style={{\n                            position: \"absolute\",\n                            top: \"10px\",\n                            right: \"10px\",\n                            fontSize: \"24px\",\n                            cursor: \"pointer\",\n                            color: \"#fff\",\n                        }}\n                    >\n                        &times;\n                    </span>\n                    <h2>Add a New Story</h2>\n                    {apiError ? (\n                        <p style={{ color: \"red\" }}>{apiError}</p>\n                    ) : (\n                        <form onSubmit={handleFormSubmit}>\n                            <div className=\"name-generator-container\">\n                                <input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    className=\"name-generator-input\"\n                                    value={newStory.name}\n                                    onChange={handleInputChange}\n                                    placeholder=\"Use your name, nickname, or generate one\"\n                                    required\n                                />\n                                <button\n                                    type=\"button\"\n                                    className=\"name-generator-button\"\n                                    onClick={() => generateUsername(setNewStory)}\n                                >\n                                    Generate Username\n                                </button>\n                            </div>\n                            <input\n                                type=\"text\"\n                                name=\"title\"\n                                value={newStory.title}\n                                onChange={handleInputChange}\n                                placeholder=\"Title of your nightmare\"\n                                maxLength={30}\n                                required\n                                style={{\n                                    width: \"100%\",\n                                    padding: \"10px\",\n                                    marginBottom: \"10px\",\n                                    borderRadius: \"5px\",\n                                }}\n                            />\n                            <select\n                                name=\"recurrencia\"\n                                value={newStory.recurrencia}\n                                onChange={handleInputChange}\n                                required\n                                style={{\n                                    width: \"100%\",\n                                    padding: \"10px\",\n                                    marginBottom: \"10px\",\n                                    borderRadius: \"5px\",\n                                }}\n                            >\n                                <option value=\"\">How regularly does it happen?</option>\n                                {recurrenceTypes.map((type, index) => (\n                                    <option key={index} value={type}>\n                                        {type}\n                                    </option>\n                                ))}\n                            </select>\n                            <select\n                                name=\"category\"\n                                value={newStory.category}\n                                onChange={handleInputChange}\n                                required\n                                style={{\n                                    width: \"100%\",\n                                    padding: \"10px\",\n                                    marginBottom: \"10px\",\n                                    borderRadius: \"5px\",\n                                }}\n                            >\n                                <option value=\"\">Select Category</option>\n                                {categories.map((category, index) => (\n                                    <option key={index} value={category}>\n                                        {category}\n                                    </option>\n                                ))}\n                            </select>\n                            <textarea\n                                name=\"value\"\n                                value={newStory.value}\n                                onChange={handleInputChange}\n                                placeholder=\"Describe your story\"\n                                required\n                                style={{\n                                    width: \"100%\",\n                                    padding: \"10px\",\n                                    marginBottom: \"10px\",\n                                    borderRadius: \"5px\",\n                                }}\n                            ></textarea>\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                value={newStory.email}\n                                onChange={handleInputChange}\n                                placeholder=\"Your Email\"\n                                required\n                                style={{\n                                    width: \"100%\",\n                                    padding: \"10px\",\n                                    marginBottom: \"10px\",\n                                    borderRadius: \"5px\",\n                                }}\n                            />\n                            <button\n                                type=\"submit\"\n                                style={{\n                                    width: \"100%\",\n                                    padding: \"10px\",\n                                    backgroundColor: \"crimson\",\n                                    color: \"#fff\",\n                                    border: \"none\",\n                                    borderRadius: \"5px\",\n                                }}\n                            >\n                                Submit\n                            </button>\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    gap: \"10px\",\n                                    marginTop: \"15px\",\n                                    fontSize: \"14px\",\n                                    lineHeight: \"1.5\",\n                                }}\n                            >\n                                <input\n                                    type=\"checkbox\"\n                                    name=\"acceptTerms\"\n                                    required\n                                    style={{\n                                        width: \"16px\",\n                                        height: \"16px\",\n                                        cursor: \"pointer\",\n                                    }}\n                                />\n                                <label style={{ margin: 0 }}>\n                                    I have read and accept the{\" \"}\n                                    <a\n                                        href=\"/terms\"\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        style={{\n                                            color: \"#fff\",\n                                            textDecoration: \"underline\",\n                                            fontWeight: \"bold\",\n                                        }}\n                                    >\n                                        terms and conditions\n                                    </a>\n                                </label>\n                            </div>\n                        </form>\n                    )}\n                </div>\n            </div>\n        )\n    );\n};\n\nexport default ModalForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}