{"ast":null,"code":"var _jsxFileName = \"/Users/jhon/Documents/Proyects/nightmare/fe-nightmare-bs/src/Components/ModalForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './ModalForm.css'; // Archivo CSS para personalizaciones\nimport { generateUsername } from \"./GenerateUsername\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:3000/api/v1/\";\nconst ModalForm = ({\n  isModalOpen,\n  setIsModalOpen\n}) => {\n  _s();\n  const [newStory, setNewStory] = useState({\n    title: \"\",\n    name: \"\",\n    recurrencia: \"\",\n    category: \"\",\n    value: \"\",\n    email: \"\"\n  });\n  const [categories, setCategories] = useState([]);\n  const [recurrenceTypes, setRecurrenceTypes] = useState([]);\n  const [apiError, setApiError] = useState(null);\n\n  // Deshabilitar el scroll al abrir el modal\n  useEffect(() => {\n    if (isModalOpen) {\n      document.body.style.overflow = \"hidden\"; // Deshabilita el scroll\n    } else {\n      document.body.style.overflow = \"auto\"; // Habilita el scroll\n    }\n    return () => {\n      document.body.style.overflow = \"auto\";\n    };\n  }, [isModalOpen]);\n\n  // Fetch Categories and Recurrence Types\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [categoriesResponse, recurrenceResponse] = await Promise.all([fetch(`${API_BASE_URL}categories`), fetch(`${API_BASE_URL}info`)]);\n        if (!categoriesResponse.ok || !recurrenceResponse.ok) {\n          throw new Error(\"Failed to fetch data from the API\");\n        }\n        const categoriesData = await categoriesResponse.json();\n        const recurrenceData = await recurrenceResponse.json();\n        setCategories(categoriesData.categories || []);\n        setRecurrenceTypes(recurrenceData.recurrence_types || []);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setApiError(\"Failed to fetch data. Please try again later.\");\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Handle Input Changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewStory(prevStory => ({\n      ...prevStory,\n      [name]: value\n    }));\n  };\n\n  // Submit Story\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    if (!newStory.title || !newStory.name || !newStory.recurrencia || !newStory.category || !newStory.value) {\n      alert(\"Please fill in all required fields.\");\n      return;\n    }\n\n    // Crear el array con el formato correcto\n    const storyToSubmit = [{\n      title: newStory.title.trim(),\n      name: newStory.name.trim(),\n      recurrencia: newStory.recurrencia,\n      category: newStory.category,\n      value: newStory.value.trim(),\n      mail: newStory.email.trim()\n    }];\n    try {\n      const response = await fetch(`${API_BASE_URL}notes`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(storyToSubmit) // Enviar el array\n      });\n      if (!response.ok) {\n        const errorDetails = await response.json();\n        throw new Error(errorDetails.message || \"Failed to submit story\");\n      }\n\n      // alert(\"Story submitted successfully!\");\n      setIsModalOpen(false);\n      setNewStory({\n        title: \"\",\n        name: \"\",\n        recurrencia: \"\",\n        category: \"\",\n        value: \"\",\n        email: \"\"\n      });\n    } catch (error) {\n      console.error(\"Error submitting story:\", error);\n      alert(error.message);\n    }\n  };\n\n  // Cerrar el modal al hacer clic fuera del formulario\n  const handleModalClick = e => {\n    if (e.target.classList.contains(\"modal\")) {\n      setIsModalOpen(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => setIsModalOpen(true),\n      style: {\n        position: \"fixed\",\n        bottom: \"20px\",\n        right: \"20px\",\n        borderRadius: \"50%\",\n        width: \"60px\",\n        height: \"60px\",\n        fontSize: \"24px\"\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      onClick: handleModalClick,\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        style: {\n          backgroundColor: \"#1e1e1e\",\n          padding: \"20px\",\n          borderRadius: \"10px\",\n          color: \"#fff\",\n          width: \"90%\",\n          maxWidth: \"500px\",\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setIsModalOpen(false),\n          style: {\n            position: \"absolute\",\n            top: \"10px\",\n            right: \"10px\",\n            fontSize: \"24px\",\n            cursor: \"pointer\",\n            color: \"#fff\"\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add a New Story\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this), apiError ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: apiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleFormSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name-generator-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              className: \"name-generator-input\",\n              value: newStory.name,\n              onChange: handleInputChange,\n              placeholder: \"Use your name, nickname, or generate one\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"name-generator-button\",\n              onClick: () => generateUsername(setNewStory),\n              children: \"Generate Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            value: newStory.title,\n            onChange: handleInputChange,\n            placeholder: \"Title of your nightmare\",\n            maxLength: 30,\n            required: true,\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              marginBottom: \"10px\",\n              borderRadius: \"5px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"recurrencia\",\n            value: newStory.recurrencia,\n            onChange: handleInputChange,\n            required: true,\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              marginBottom: \"10px\",\n              borderRadius: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"How regularly does it happen?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 37\n            }, this), recurrenceTypes.map((type, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type,\n              children: type\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            value: newStory.category,\n            onChange: handleInputChange,\n            required: true,\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              marginBottom: \"10px\",\n              borderRadius: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 37\n            }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category,\n              children: category\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"value\",\n            value: newStory.value,\n            onChange: handleInputChange,\n            placeholder: \"Describe your story\",\n            required: true,\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              marginBottom: \"10px\",\n              borderRadius: \"5px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: newStory.email,\n            onChange: handleInputChange,\n            placeholder: \"Your Email\",\n            required: true,\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              marginBottom: \"10px\",\n              borderRadius: \"5px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              backgroundColor: \"crimson\",\n              color: \"#fff\",\n              border: \"none\",\n              borderRadius: \"5px\"\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: \"10px\",\n              marginTop: \"15px\",\n              fontSize: \"14px\",\n              lineHeight: \"1.5\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"acceptTerms\",\n              required: true,\n              style: {\n                width: \"16px\",\n                height: \"16px\",\n                cursor: \"pointer\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                margin: 0\n              },\n              children: [\"I have read and accept the\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/terms\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                style: {\n                  color: \"#fff\",\n                  textDecoration: \"underline\",\n                  fontWeight: \"bold\"\n                },\n                children: \"terms and conditions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n_s(ModalForm, \"np5qmGzqUIgn/Z6IaglpStDUNVw=\");\n_c = ModalForm;\nexport default ModalForm;\nvar _c;\n$RefreshReg$(_c, \"ModalForm\");","map":{"version":3,"names":["React","useState","useEffect","generateUsername","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","ModalForm","isModalOpen","setIsModalOpen","_s","newStory","setNewStory","title","name","recurrencia","category","value","email","categories","setCategories","recurrenceTypes","setRecurrenceTypes","apiError","setApiError","document","body","style","overflow","fetchData","categoriesResponse","recurrenceResponse","Promise","all","fetch","ok","Error","categoriesData","json","recurrenceData","recurrence_types","error","console","handleInputChange","e","target","prevStory","handleFormSubmit","preventDefault","alert","storyToSubmit","trim","mail","response","method","headers","JSON","stringify","errorDetails","message","handleModalClick","classList","contains","children","className","onClick","position","bottom","right","borderRadius","width","height","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","top","left","backgroundColor","display","alignItems","justifyContent","zIndex","stopPropagation","padding","color","maxWidth","cursor","onSubmit","type","onChange","placeholder","required","maxLength","marginBottom","map","index","border","gap","marginTop","lineHeight","margin","href","rel","textDecoration","fontWeight","_c","$RefreshReg$"],"sources":["/Users/jhon/Documents/Proyects/nightmare/fe-nightmare-bs/src/Components/ModalForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './ModalForm.css'; // Archivo CSS para personalizaciones\nimport { generateUsername } from \"./GenerateUsername\";\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:3000/api/v1/\";\n\nconst ModalForm = ({ isModalOpen, setIsModalOpen }) => {\n    const [newStory, setNewStory] = useState({\n        title: \"\",\n        name: \"\",\n        recurrencia: \"\",\n        category: \"\",\n        value: \"\",\n        email: \"\",\n    });\n    const [categories, setCategories] = useState([]);\n    const [recurrenceTypes, setRecurrenceTypes] = useState([]);\n    const [apiError, setApiError] = useState(null);\n\n    // Deshabilitar el scroll al abrir el modal\n    useEffect(() => {\n        if (isModalOpen) {\n            document.body.style.overflow = \"hidden\"; // Deshabilita el scroll\n        } else {\n            document.body.style.overflow = \"auto\"; // Habilita el scroll\n        }\n\n        return () => {\n            document.body.style.overflow = \"auto\";\n        };\n    }, [isModalOpen]);\n\n    // Fetch Categories and Recurrence Types\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const [categoriesResponse, recurrenceResponse] = await Promise.all([\n                    fetch(`${API_BASE_URL}categories`),\n                    fetch(`${API_BASE_URL}info`),\n                ]);\n\n                if (!categoriesResponse.ok || !recurrenceResponse.ok) {\n                    throw new Error(\"Failed to fetch data from the API\");\n                }\n\n                const categoriesData = await categoriesResponse.json();\n                const recurrenceData = await recurrenceResponse.json();\n\n                setCategories(categoriesData.categories || []);\n                setRecurrenceTypes(recurrenceData.recurrence_types || []);\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n                setApiError(\"Failed to fetch data. Please try again later.\");\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    // Handle Input Changes\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setNewStory((prevStory) => ({ ...prevStory, [name]: value }));\n    };\n\n    // Submit Story\n    const handleFormSubmit = async (e) => {\n        e.preventDefault();\n    \n        if (!newStory.title || !newStory.name || !newStory.recurrencia || !newStory.category || !newStory.value) {\n            alert(\"Please fill in all required fields.\");\n            return;\n        }\n    \n        // Crear el array con el formato correcto\n        const storyToSubmit = [\n            {\n                title: newStory.title.trim(),\n                name: newStory.name.trim(),\n                recurrencia: newStory.recurrencia,\n                category: newStory.category,\n                value: newStory.value.trim(),\n                mail: newStory.email.trim(),\n            },\n        ];\n    \n        try {\n            const response = await fetch(`${API_BASE_URL}notes`, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(storyToSubmit), // Enviar el array\n            });\n    \n            if (!response.ok) {\n                const errorDetails = await response.json();\n                throw new Error(errorDetails.message || \"Failed to submit story\");\n            }\n    \n            // alert(\"Story submitted successfully!\");\n            setIsModalOpen(false);\n            setNewStory({ title: \"\", name: \"\", recurrencia: \"\", category: \"\", value: \"\", email: \"\" });\n        } catch (error) {\n            console.error(\"Error submitting story:\", error);\n            alert(error.message);\n        }\n    };\n\n    // Cerrar el modal al hacer clic fuera del formulario\n    const handleModalClick = (e) => {\n        if (e.target.classList.contains(\"modal\")) {\n            setIsModalOpen(false);\n        }\n    };\n\n    return (\n        <div>\n            {/* Botón para abrir el modal */}\n            <button\n                className=\"btn btn-primary\"\n                onClick={() => setIsModalOpen(true)}\n                style={{\n                    position: \"fixed\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                    borderRadius: \"50%\",\n                    width: \"60px\",\n                    height: \"60px\",\n                    fontSize: \"24px\",\n                }}\n            >\n                +\n            </button>\n\n            {/* Modal */}\n            {isModalOpen && (\n                <div\n                    className=\"modal\"\n                    onClick={handleModalClick}\n                    style={{\n                        position: \"fixed\",\n                        top: 0,\n                        left: 0,\n                        width: \"100%\",\n                        height: \"100%\",\n                        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        zIndex: 1000,\n                    }}\n                >\n                    <div\n                        className=\"modal-content\"\n                        onClick={(e) => e.stopPropagation()}\n                        style={{\n                            backgroundColor: \"#1e1e1e\",\n                            padding: \"20px\",\n                            borderRadius: \"10px\",\n                            color: \"#fff\",\n                            width: \"90%\",\n                            maxWidth: \"500px\",\n                            position: \"relative\",\n                        }}\n                    >\n                        <span\n                            onClick={() => setIsModalOpen(false)}\n                            style={{\n                                position: \"absolute\",\n                                top: \"10px\",\n                                right: \"10px\",\n                                fontSize: \"24px\",\n                                cursor: \"pointer\",\n                                color: \"#fff\",\n                            }}\n                        >\n                            &times;\n                        </span>\n                        <h2>Add a New Story</h2>\n                        {apiError ? (\n                            <p style={{ color: \"red\" }}>{apiError}</p>\n                        ) : (\n                            <form onSubmit={handleFormSubmit}>\n                                <div className=\"name-generator-container\">\n                                    <input\n                                        type=\"text\"\n                                        name=\"name\"\n                                        className=\"name-generator-input\"\n                                        value={newStory.name}\n                                        onChange={handleInputChange}\n                                        placeholder=\"Use your name, nickname, or generate one\"\n                                        required\n                                    />\n                                    <button\n                                        type=\"button\"\n                                        className=\"name-generator-button\"\n                                        onClick={() => generateUsername(setNewStory)}\n                                    >\n                                        Generate Username\n                                    </button>\n                                </div>\n                                <input\n                                    type=\"text\"\n                                    name=\"title\"\n                                    value={newStory.title}\n                                    onChange={handleInputChange}\n                                    placeholder=\"Title of your nightmare\"\n                                    maxLength={30}\n                                    required\n                                    style={{\n                                        width: \"100%\",\n                                        padding: \"10px\",\n                                        marginBottom: \"10px\",\n                                        borderRadius: \"5px\",\n                                    }}\n                                />\n                                <select\n                                    name=\"recurrencia\"\n                                    value={newStory.recurrencia}\n                                    onChange={handleInputChange}\n                                    required\n                                    style={{\n                                        width: \"100%\",\n                                        padding: \"10px\",\n                                        marginBottom: \"10px\",\n                                        borderRadius: \"5px\",\n                                    }}\n                                >\n                                    <option value=\"\">How regularly does it happen?</option>\n                                    {recurrenceTypes.map((type, index) => (\n                                        <option key={index} value={type}>\n                                            {type}\n                                        </option>\n                                    ))}\n                                </select>\n                                <select\n                                    name=\"category\"\n                                    value={newStory.category}\n                                    onChange={handleInputChange}\n                                    required\n                                    style={{\n                                        width: \"100%\",\n                                        padding: \"10px\",\n                                        marginBottom: \"10px\",\n                                        borderRadius: \"5px\",\n                                    }}\n                                >\n                                    <option value=\"\">Select Category</option>\n                                    {categories.map((category, index) => (\n                                        <option key={index} value={category}>\n                                            {category}\n                                        </option>\n                                    ))}\n                                </select>\n                                <textarea\n                                    name=\"value\"\n                                    value={newStory.value}\n                                    onChange={handleInputChange}\n                                    placeholder=\"Describe your story\"\n                                    required\n                                    style={{\n                                        width: \"100%\",\n                                        padding: \"10px\",\n                                        marginBottom: \"10px\",\n                                        borderRadius: \"5px\",\n                                    }}\n                                ></textarea>\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    value={newStory.email}\n                                    onChange={handleInputChange}\n                                    placeholder=\"Your Email\"\n                                    required\n                                    style={{\n                                        width: \"100%\",\n                                        padding: \"10px\",\n                                        marginBottom: \"10px\",\n                                        borderRadius: \"5px\",\n                                    }}\n                                />\n                                <button\n                                    type=\"submit\"\n                                    style={{\n                                        width: \"100%\",\n                                        padding: \"10px\",\n                                        backgroundColor: \"crimson\",\n                                        color: \"#fff\",\n                                        border: \"none\",\n                                        borderRadius: \"5px\",\n                                    }}\n                                >\n                                    Submit\n                                </button>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        alignItems: \"center\",\n                                        gap: \"10px\",\n                                        marginTop: \"15px\",\n                                        fontSize: \"14px\",\n                                        lineHeight: \"1.5\",\n                                    }}\n                                >\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"acceptTerms\"\n                                        required\n                                        style={{\n                                            width: \"16px\",\n                                            height: \"16px\",\n                                            cursor: \"pointer\",\n                                        }}\n                                    />\n                                    <label style={{ margin: 0 }}>\n                                        I have read and accept the{\" \"}\n                                        <a\n                                            href=\"/terms\"\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                            style={{\n                                                color: \"#fff\",\n                                                textDecoration: \"underline\",\n                                                fontWeight: \"bold\",\n                                            }}\n                                        >\n                                            terms and conditions\n                                        </a>\n                                    </label>\n                                </div>\n                            </form>\n                        )}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ModalForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}