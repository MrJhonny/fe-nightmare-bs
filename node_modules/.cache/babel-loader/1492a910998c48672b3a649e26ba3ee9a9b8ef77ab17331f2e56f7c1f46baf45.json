{"ast":null,"code":"var _jsxFileName = \"/Users/jhon/Documents/Proyects/nightmare/fe-nightmare-bs/src/Pages/StoriesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./StoriesPage.css\";\nimport StoryCard from \"../Components/StoryCard\";\nimport Background from \"../Components/Background\";\nimport Filter from \"../Components/Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoriesPage = ({\n  API_BASE_URL\n}) => {\n  _s();\n  const [stories, setStories] = useState([]);\n  const [filteredStories, setFilteredStories] = useState([]);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchStories = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}notes`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch stories\");\n        }\n        const data = await response.json();\n        const sortedStories = data.sort((a, b) => b.id - a.id);\n        setStories(sortedStories);\n        setFilteredStories(sortedStories);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching stories:\", err);\n        setError(\"Unable to load stories. Please try again later.\");\n        setLoading(false);\n      }\n    };\n    fetchStories();\n  }, [API_BASE_URL]);\n  const handleCategoryChange = category => {\n    const updatedSelectedCategories = selectedCategories.includes(category) ? selectedCategories.filter(cat => cat !== category) : [...selectedCategories, category];\n    setSelectedCategories(updatedSelectedCategories);\n\n    // Filtra historias por categorías seleccionadas\n    if (updatedSelectedCategories.length > 0) {\n      setFilteredStories(stories.filter(story => updatedSelectedCategories.includes(story.category)));\n    } else {\n      setFilteredStories(stories); // Muestra todas las historias si no hay filtro\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: \"Loading stories...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  const categories = [\"Apocalyptic\", \"Slasher\", \"Psychological\", \"Cosmic Horror\", \"Haunted House\", \"Technological Horror\", \"Supernatural\", \"Gore\", \"Dark Tales\"];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"stories-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center text-light page-title\",\n        children: \"All Stories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"text-center text-light\",\n        children: \"Filter by Categories:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        categories: categories,\n        selectedCategories: selectedCategories,\n        onCategoryChange: handleCategoryChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stories-grid\",\n        children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), filteredStories.map(story => /*#__PURE__*/_jsxDEV(StoryCard, {\n          story: story\n        }, story.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(StoriesPage, \"d19tePpPNNwdcEvaWqZ/2AzUrYM=\");\n_c = StoriesPage;\nexport default StoriesPage;\nvar _c;\n$RefreshReg$(_c, \"StoriesPage\");","map":{"version":3,"names":["React","useState","useEffect","StoryCard","Background","Filter","jsxDEV","_jsxDEV","StoriesPage","API_BASE_URL","_s","stories","setStories","filteredStories","setFilteredStories","selectedCategories","setSelectedCategories","loading","setLoading","error","setError","fetchStories","response","fetch","ok","Error","data","json","sortedStories","sort","a","b","id","err","console","handleCategoryChange","category","updatedSelectedCategories","includes","filter","cat","length","story","className","children","fileName","_jsxFileName","lineNumber","columnNumber","categories","onCategoryChange","map","_c","$RefreshReg$"],"sources":["/Users/jhon/Documents/Proyects/nightmare/fe-nightmare-bs/src/Pages/StoriesPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./StoriesPage.css\";\nimport StoryCard from \"../Components/StoryCard\";\nimport Background from \"../Components/Background\";\nimport Filter from \"../Components/Filter\";\n\nconst StoriesPage = ({ API_BASE_URL }) => {\n  const [stories, setStories] = useState([]);\n  const [filteredStories, setFilteredStories] = useState([]);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchStories = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}notes`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch stories\");\n        }\n        const data = await response.json();\n        const sortedStories = data.sort((a, b) => b.id - a.id);\n        setStories(sortedStories);\n        setFilteredStories(sortedStories);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching stories:\", err);\n        setError(\"Unable to load stories. Please try again later.\");\n        setLoading(false);\n      }\n    };\n\n    fetchStories();\n  }, [API_BASE_URL]);\n\n  const handleCategoryChange = (category) => {\n    const updatedSelectedCategories = selectedCategories.includes(category)\n      ? selectedCategories.filter((cat) => cat !== category)\n      : [...selectedCategories, category];\n\n    setSelectedCategories(updatedSelectedCategories);\n\n    // Filtra historias por categorías seleccionadas\n    if (updatedSelectedCategories.length > 0) {\n      setFilteredStories(\n        stories.filter((story) =>\n          updatedSelectedCategories.includes(story.category)\n        )\n      );\n    } else {\n      setFilteredStories(stories); // Muestra todas las historias si no hay filtro\n    }\n  };\n\n  if (loading) {\n    return <p className=\"loading-message\">Loading stories...</p>;\n  }\n\n  if (error) {\n    return <p className=\"error-message\">{error}</p>;\n  }\n\n  const categories = [\n    \"Apocalyptic\",\n    \"Slasher\",\n    \"Psychological\",\n    \"Cosmic Horror\",\n    \"Haunted House\",\n    \"Technological Horror\",\n    \"Supernatural\",\n    \"Gore\",\n    \"Dark Tales\",\n  ];\n\n  return (\n    <section className=\"stories-page\">\n      <div className=\"container py-4\">\n        <h1 className=\"text-center text-light page-title\">All Stories</h1>\n        <h5 className=\"text-center text-light\">Filter by Categories:</h5>\n        <Filter\n          categories={categories}\n          selectedCategories={selectedCategories}\n          onCategoryChange={handleCategoryChange}\n        />\n        <div className=\"stories-grid\">\n          <Background />\n          {filteredStories.map((story) => (\n            <StoryCard key={story.id} story={story} />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default StoriesPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}