{"ast":null,"code":"var _jsxFileName = \"/Users/jhon/Documents/Proyects/nightmare/fe-nightmare-bs/src/Pages/StoriesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./StoriesPage.css\";\nimport StoryCard from \"../Components/StoryCard\";\nimport Background from \"../Components/Background\";\nimport Filter from \"../Components/Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoriesPage = ({\n  API_BASE_URL\n}) => {\n  _s();\n  const [stories, setStories] = useState([]);\n  const [filteredStories, setFilteredStories] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchStories = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}notes`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch stories\");\n        }\n        const data = await response.json();\n\n        // Ordenar las historias por ID en orden descendente\n        const sortedStories = data.sort((a, b) => b.id - a.id);\n\n        // Obtener categorías únicas\n        const uniqueCategories = [...new Set(sortedStories.map(story => story.category))];\n        setStories(sortedStories);\n        setFilteredStories(sortedStories);\n        setCategories(uniqueCategories);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching stories:\", err);\n        setError(\"Unable to load stories. Please try again later.\");\n        setLoading(false);\n      }\n    };\n    fetchStories();\n  }, [API_BASE_URL]);\n\n  // Manejar el cambio de categorías seleccionadas\n  useEffect(() => {\n    if (selectedCategories.length === 0) {\n      setFilteredStories(stories);\n    } else {\n      const filtered = stories.filter(story => selectedCategories.includes(story.category));\n      setFilteredStories(filtered);\n    }\n  }, [selectedCategories, stories]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: \"Loading stories...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"stories-page\",\n    children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center text-light page-title\",\n        children: \"All Stories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        categories: categories,\n        selectedCategories: selectedCategories,\n        setSelectedCategories: setSelectedCategories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stories-grid\",\n        children: filteredStories.map(story => /*#__PURE__*/_jsxDEV(StoryCard, {\n          story: story\n        }, story.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(StoriesPage, \"pIW8IUk3+q8gl0+cgRS5Peu4//g=\");\n_c = StoriesPage;\nexport default StoriesPage;\nvar _c;\n$RefreshReg$(_c, \"StoriesPage\");","map":{"version":3,"names":["React","useState","useEffect","StoryCard","Background","Filter","jsxDEV","_jsxDEV","StoriesPage","API_BASE_URL","_s","stories","setStories","filteredStories","setFilteredStories","categories","setCategories","selectedCategories","setSelectedCategories","loading","setLoading","error","setError","fetchStories","response","fetch","ok","Error","data","json","sortedStories","sort","a","b","id","uniqueCategories","Set","map","story","category","err","console","length","filtered","filter","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jhon/Documents/Proyects/nightmare/fe-nightmare-bs/src/Pages/StoriesPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./StoriesPage.css\";\nimport StoryCard from \"../Components/StoryCard\";\nimport Background from \"../Components/Background\";\nimport Filter from \"../Components/Filter\";\n\nconst StoriesPage = ({ API_BASE_URL }) => {\n  const [stories, setStories] = useState([]);\n  const [filteredStories, setFilteredStories] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchStories = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}notes`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch stories\");\n        }\n        const data = await response.json();\n\n        // Ordenar las historias por ID en orden descendente\n        const sortedStories = data.sort((a, b) => b.id - a.id);\n\n        // Obtener categorías únicas\n        const uniqueCategories = [\n          ...new Set(sortedStories.map((story) => story.category)),\n        ];\n\n        setStories(sortedStories);\n        setFilteredStories(sortedStories);\n        setCategories(uniqueCategories);\n\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching stories:\", err);\n        setError(\"Unable to load stories. Please try again later.\");\n        setLoading(false);\n      }\n    };\n\n    fetchStories();\n  }, [API_BASE_URL]);\n\n  // Manejar el cambio de categorías seleccionadas\n  useEffect(() => {\n    if (selectedCategories.length === 0) {\n      setFilteredStories(stories);\n    } else {\n      const filtered = stories.filter((story) =>\n        selectedCategories.includes(story.category)\n      );\n      setFilteredStories(filtered);\n    }\n  }, [selectedCategories, stories]);\n\n  if (loading) {\n    return <p className=\"loading-message\">Loading stories...</p>;\n  }\n\n  if (error) {\n    return <p className=\"error-message\">{error}</p>;\n  }\n\n  return (\n    <section className=\"stories-page\">\n      <Background />\n      <div className=\"container py-4\">\n        <h1 className=\"text-center text-light page-title\">All Stories</h1>\n\n        {/* Filtro */}\n        <Filter\n          categories={categories}\n          selectedCategories={selectedCategories}\n          setSelectedCategories={setSelectedCategories}\n        />\n\n        <div className=\"stories-grid\">\n          {filteredStories.map((story) => (\n            <StoryCard key={story.id} story={story} />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default StoriesPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}