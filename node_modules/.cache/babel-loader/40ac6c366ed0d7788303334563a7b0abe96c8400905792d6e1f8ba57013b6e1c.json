{"ast":null,"code":"var _jsxFileName = \"/Users/jhon/Documents/Proyects/nightmare/fe-nightmare-bs/src/Components/Filter.js\";\nimport React from \"react\";\nimport \"./Filter.css\";\nimport apocalyptic from \"../img/categories/apocalyptic.jpg\";\nimport slasher from \"../img/categories/slasher.jpg\";\nimport psychological from \"../img/categories/psychological.jpg\";\nimport cosmicHorror from \"../img/categories/cosmic-horror.jpg\";\nimport hauntedHouse from \"../img/categories/haunted-house.jpg\";\nimport technologicalHorror from \"../img/categories/technological-horror.jpg\";\nimport supernatural from \"../img/categories/supernatural.jpg\";\nimport gore from \"../img/categories/gore.jpg\";\nimport darkTales from \"../img/categories/dark-tales.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categoryImages = {\n  Apocalyptic: apocalyptic,\n  Slasher: slasher,\n  Psychological: psychological,\n  \"Cosmic Horror\": cosmicHorror,\n  \"Haunted House\": hauntedHouse,\n  \"Technological Horror\": technologicalHorror,\n  Supernatural: supernatural,\n  Gore: gore,\n  \"Dark Tales\": darkTales\n};\nconst Filter = ({\n  categories,\n  selectedCategories,\n  setSelectedCategories\n}) => {\n  const handleCategoryChange = category => {\n    if (selectedCategories.includes(category)) {\n      // Elimina la categoría si ya está seleccionada\n      setSelectedCategories(selectedCategories.filter(item => item !== category));\n    } else {\n      // Agrega la categoría si no está seleccionada\n      setSelectedCategories([...selectedCategories, category]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"filter-title text-light\",\n      children: \"Filter by Categories:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-options\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `filter-option ${selectedCategories.includes(category) ? \"selected\" : \"\"}`,\n        onClick: () => handleCategoryChange(category),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: categoryImages[category],\n          alt: category,\n          className: \"filter-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"filter-label\",\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = Filter;\nexport default Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","apocalyptic","slasher","psychological","cosmicHorror","hauntedHouse","technologicalHorror","supernatural","gore","darkTales","jsxDEV","_jsxDEV","categoryImages","Apocalyptic","Slasher","Psychological","Supernatural","Gore","Filter","categories","selectedCategories","setSelectedCategories","handleCategoryChange","category","includes","filter","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/jhon/Documents/Proyects/nightmare/fe-nightmare-bs/src/Components/Filter.js"],"sourcesContent":["import React from \"react\";\nimport \"./Filter.css\";\nimport apocalyptic from \"../img/categories/apocalyptic.jpg\";\nimport slasher from \"../img/categories/slasher.jpg\";\nimport psychological from \"../img/categories/psychological.jpg\";\nimport cosmicHorror from \"../img/categories/cosmic-horror.jpg\";\nimport hauntedHouse from \"../img/categories/haunted-house.jpg\";\nimport technologicalHorror from \"../img/categories/technological-horror.jpg\";\nimport supernatural from \"../img/categories/supernatural.jpg\";\nimport gore from \"../img/categories/gore.jpg\";\nimport darkTales from \"../img/categories/dark-tales.jpg\";\n\nconst categoryImages = {\n  Apocalyptic: apocalyptic,\n  Slasher: slasher,\n  Psychological: psychological,\n  \"Cosmic Horror\": cosmicHorror,\n  \"Haunted House\": hauntedHouse,\n  \"Technological Horror\": technologicalHorror,\n  Supernatural: supernatural,\n  Gore: gore,\n  \"Dark Tales\": darkTales,\n};\n\nconst Filter = ({ categories, selectedCategories, setSelectedCategories }) => {\n  const handleCategoryChange = (category) => {\n    if (selectedCategories.includes(category)) {\n      // Elimina la categoría si ya está seleccionada\n      setSelectedCategories(\n        selectedCategories.filter((item) => item !== category)\n      );\n    } else {\n      // Agrega la categoría si no está seleccionada\n      setSelectedCategories([...selectedCategories, category]);\n    }\n  };\n\n  return (\n    <div className=\"filter-container\">\n      <h3 className=\"filter-title text-light\">Filter by Categories:</h3>\n      <div className=\"filter-options\">\n        {categories.map((category) => (\n          <div\n            key={category}\n            className={`filter-option ${\n              selectedCategories.includes(category) ? \"selected\" : \"\"\n            }`}\n            onClick={() => handleCategoryChange(category)}\n          >\n            <img\n              src={categoryImages[category]}\n              alt={category}\n              className=\"filter-image\"\n            />\n            <span className=\"filter-label\">{category}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,OAAOC,WAAW,MAAM,mCAAmC;AAC3D,OAAOC,OAAO,MAAM,+BAA+B;AACnD,OAAOC,aAAa,MAAM,qCAAqC;AAC/D,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,OAAOC,mBAAmB,MAAM,4CAA4C;AAC5E,OAAOC,YAAY,MAAM,oCAAoC;AAC7D,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,SAAS,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,cAAc,GAAG;EACrBC,WAAW,EAAEZ,WAAW;EACxBa,OAAO,EAAEZ,OAAO;EAChBa,aAAa,EAAEZ,aAAa;EAC5B,eAAe,EAAEC,YAAY;EAC7B,eAAe,EAAEC,YAAY;EAC7B,sBAAsB,EAAEC,mBAAmB;EAC3CU,YAAY,EAAET,YAAY;EAC1BU,IAAI,EAAET,IAAI;EACV,YAAY,EAAEC;AAChB,CAAC;AAED,MAAMS,MAAM,GAAGA,CAAC;EAAEC,UAAU;EAAEC,kBAAkB;EAAEC;AAAsB,CAAC,KAAK;EAC5E,MAAMC,oBAAoB,GAAIC,QAAQ,IAAK;IACzC,IAAIH,kBAAkB,CAACI,QAAQ,CAACD,QAAQ,CAAC,EAAE;MACzC;MACAF,qBAAqB,CACnBD,kBAAkB,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKH,QAAQ,CACvD,CAAC;IACH,CAAC,MAAM;MACL;MACAF,qBAAqB,CAAC,CAAC,GAAGD,kBAAkB,EAAEG,QAAQ,CAAC,CAAC;IAC1D;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKgB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BjB,OAAA;MAAIgB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClErB,OAAA;MAAKgB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BT,UAAU,CAACc,GAAG,CAAEV,QAAQ,iBACvBZ,OAAA;QAEEgB,SAAS,EAAE,iBACTP,kBAAkB,CAACI,QAAQ,CAACD,QAAQ,CAAC,GAAG,UAAU,GAAG,EAAE,EACtD;QACHW,OAAO,EAAEA,CAAA,KAAMZ,oBAAoB,CAACC,QAAQ,CAAE;QAAAK,QAAA,gBAE9CjB,OAAA;UACEwB,GAAG,EAAEvB,cAAc,CAACW,QAAQ,CAAE;UAC9Ba,GAAG,EAAEb,QAAS;UACdI,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,eACFrB,OAAA;UAAMgB,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEL;QAAQ;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAX3CT,QAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GApCInB,MAAM;AAsCZ,eAAeA,MAAM;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}